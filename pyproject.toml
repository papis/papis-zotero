[build-system]
build-backend = "hatchling.build"
requires = [ "hatchling>=1.10" ]

[project]
name = "papis-zotero"
version = "0.2"
description = "Interact with Zotero using papis"
readme = "README.rst"
keywords = [ "bibtex", "biliography", "cli", "management", "papis", "zotero" ]
license = { text = "GPL-3.0-or-later" }
maintainers = [ { name = "Alejandro Gallo", email = "aamsgallo@gmail.com" } ]
authors = [ { name = "Alejandro Gallo", email = "aamsgallo@gmail.com" } ]
requires-python = ">=3.8"
classifiers = [
    "Environment :: Console",
    "Environment :: Console :: Curses",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: MacOS",
    "Operating System :: Microsoft",
    "Operating System :: OS Independent",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Utilities",
]
dependencies = [ "papis>=0.14,<0.15" ]

[project.optional-dependencies]
develop = [
    "mypy>=0.7",
    "pytest",
    "pytest-cov",
    "python-coveralls",
    "ruff",
    "types-pyyaml",
]

[project.urls]
Repository = "https://github.com/papis/papis-zotero"

[project.entry-points."papis.command"]
zotero = "papis_zotero:main"

[tool.pytest.ini_options]
addopts = [
    "--doctest-modules",
    "--cov=papis_zotero",
]
norecursedirs = ".git doc build dist"
python_files = "*.py"
markers = [
    "config_setup: setup for tmp_config",
    "library_setup: setup for tmp_library",
]

[tool.ruff]
preview = true
line-length = 88

[tool.ruff.lint]
select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "E",   # pycodestyle
    "F",   # pyflakes
    "G",   # flake8-logging-format
    "I",   # flake8-isort
    "N",   # pep8-naming
    "PGH", # pygrep-hooks
    "PL",  # pylint
    "Q",   # flake8-quotes
    "RUF", # ruff
    "UP",  # pyupgrade
    "W",   # pycodestyle
]
ignore = [
    # https://docs.astral.sh/ruff/rules/#rules
    # "N818",    # error-suffix-on-exception-name
    "PLC0415", # import-outside-top-level
    # "PLC1901", # compare-to-empty-string
    # "PLR0904", # too-many-public-methods
    # "PLR0911", # too-many-return-statements
    # "PLR0912", # too-many-branches
    # "PLR0913", # too-many-arguments
    # "PLR0915", # too-many-statements
    # "PLR0917", # too-many-positional
    # "PLR1702", # too-many-nested-blocks
    "PLR2004", # magic-value-comparison
    # "PLR5501", # collapsible-else-if
    # "PLW0603", # global-statement
]
task-tags = ["spell"]

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = ["papis"]
known-local-folder = ["papis_zotero"]

[tool.mypy]
strict = true
show_column_numbers = true
hide_error_codes = false
pretty = true
warn_unused_ignores = true

[tool.typos.default]
extend-ignore-re = [
    "(?Rm)^.*#\\s*spell:\\s*disable$"
]
